/*
 * This file is generated by jOOQ.
 */
package lt.liutikas.manga_notification_svc.db.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqMangaChapter implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private UUID mangaSubscriptionId;
    private String title;
    private String url;
    private LocalDateTime createdOn;
    private LocalDateTime updatedOn;

    public JooqMangaChapter() {}

    public JooqMangaChapter(JooqMangaChapter value) {
        this.id = value.id;
        this.mangaSubscriptionId = value.mangaSubscriptionId;
        this.title = value.title;
        this.url = value.url;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public JooqMangaChapter(
        UUID id,
        UUID mangaSubscriptionId,
        String title,
        String url,
        LocalDateTime createdOn,
        LocalDateTime updatedOn
    ) {
        this.id = id;
        this.mangaSubscriptionId = mangaSubscriptionId;
        this.title = title;
        this.url = url;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    /**
     * Getter for <code>public.manga_chapter.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.manga_chapter.id</code>.
     */
    public JooqMangaChapter setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.manga_chapter.manga_subscription_id</code>.
     */
    public UUID getMangaSubscriptionId() {
        return this.mangaSubscriptionId;
    }

    /**
     * Setter for <code>public.manga_chapter.manga_subscription_id</code>.
     */
    public JooqMangaChapter setMangaSubscriptionId(UUID mangaSubscriptionId) {
        this.mangaSubscriptionId = mangaSubscriptionId;
        return this;
    }

    /**
     * Getter for <code>public.manga_chapter.title</code>.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>public.manga_chapter.title</code>.
     */
    public JooqMangaChapter setTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Getter for <code>public.manga_chapter.url</code>.
     */
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>public.manga_chapter.url</code>.
     */
    public JooqMangaChapter setUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Getter for <code>public.manga_chapter.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return this.createdOn;
    }

    /**
     * Setter for <code>public.manga_chapter.created_on</code>.
     */
    public JooqMangaChapter setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Getter for <code>public.manga_chapter.updated_on</code>.
     */
    public LocalDateTime getUpdatedOn() {
        return this.updatedOn;
    }

    /**
     * Setter for <code>public.manga_chapter.updated_on</code>.
     */
    public JooqMangaChapter setUpdatedOn(LocalDateTime updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JooqMangaChapter other = (JooqMangaChapter) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.mangaSubscriptionId == null) {
            if (other.mangaSubscriptionId != null)
                return false;
        }
        else if (!this.mangaSubscriptionId.equals(other.mangaSubscriptionId))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        if (this.createdOn == null) {
            if (other.createdOn != null)
                return false;
        }
        else if (!this.createdOn.equals(other.createdOn))
            return false;
        if (this.updatedOn == null) {
            if (other.updatedOn != null)
                return false;
        }
        else if (!this.updatedOn.equals(other.updatedOn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.mangaSubscriptionId == null) ? 0 : this.mangaSubscriptionId.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.createdOn == null) ? 0 : this.createdOn.hashCode());
        result = prime * result + ((this.updatedOn == null) ? 0 : this.updatedOn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JooqMangaChapter (");

        sb.append(id);
        sb.append(", ").append(mangaSubscriptionId);
        sb.append(", ").append(title);
        sb.append(", ").append(url);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
}
