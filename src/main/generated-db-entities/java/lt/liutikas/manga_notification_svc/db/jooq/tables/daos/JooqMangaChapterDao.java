/*
 * This file is generated by jOOQ.
 */
package lt.liutikas.manga_notification_svc.db.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import lt.liutikas.manga_notification_svc.db.jooq.tables.MangaChapter;
import lt.liutikas.manga_notification_svc.db.jooq.tables.pojos.JooqMangaChapter;
import lt.liutikas.manga_notification_svc.db.jooq.tables.records.JooqMangaChapterRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class JooqMangaChapterDao extends DAOImpl<JooqMangaChapterRecord, JooqMangaChapter, UUID> {

    /**
     * Create a new JooqMangaChapterDao without any configuration
     */
    public JooqMangaChapterDao() {
        super(MangaChapter.MANGA_CHAPTER, JooqMangaChapter.class);
    }

    /**
     * Create a new JooqMangaChapterDao with an attached configuration
     */
    @Autowired
    public JooqMangaChapterDao(Configuration configuration) {
        super(MangaChapter.MANGA_CHAPTER, JooqMangaChapter.class, configuration);
    }

    @Override
    public UUID getId(JooqMangaChapter object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqMangaChapter> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(MangaChapter.MANGA_CHAPTER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<JooqMangaChapter> fetchById(UUID... values) {
        return fetch(MangaChapter.MANGA_CHAPTER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public JooqMangaChapter fetchOneById(UUID value) {
        return fetchOne(MangaChapter.MANGA_CHAPTER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<JooqMangaChapter> fetchOptionalById(UUID value) {
        return fetchOptional(MangaChapter.MANGA_CHAPTER.ID, value);
    }

    /**
     * Fetch records that have <code>manga_subscription_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<JooqMangaChapter> fetchRangeOfMangaSubscriptionId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(MangaChapter.MANGA_CHAPTER.MANGA_SUBSCRIPTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>manga_subscription_id IN (values)</code>
     */
    public List<JooqMangaChapter> fetchByMangaSubscriptionId(UUID... values) {
        return fetch(MangaChapter.MANGA_CHAPTER.MANGA_SUBSCRIPTION_ID, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqMangaChapter> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(MangaChapter.MANGA_CHAPTER.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<JooqMangaChapter> fetchByTitle(String... values) {
        return fetch(MangaChapter.MANGA_CHAPTER.TITLE, values);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqMangaChapter> fetchRangeOfUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(MangaChapter.MANGA_CHAPTER.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<JooqMangaChapter> fetchByUrl(String... values) {
        return fetch(MangaChapter.MANGA_CHAPTER.URL, values);
    }

    /**
     * Fetch records that have <code>created_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqMangaChapter> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(MangaChapter.MANGA_CHAPTER.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<JooqMangaChapter> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(MangaChapter.MANGA_CHAPTER.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>updated_on BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<JooqMangaChapter> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(MangaChapter.MANGA_CHAPTER.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_on IN (values)</code>
     */
    public List<JooqMangaChapter> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(MangaChapter.MANGA_CHAPTER.UPDATED_ON, values);
    }
}
